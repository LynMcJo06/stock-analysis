
Sub DQAnalysis()

    'activate the worksheet
    Worksheets("DQ Analysis").Activate
    
    'create a heading for te output worksheet
    Range("A1").Value = "DAQO (Ticker: DQ)"
    
    'Create a header row using the cells method in the output worksheet
    Cells(3, 1).Value = "Year"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"
    
    'activate worksheet to be analyzed
    Worksheets("2018").Activate
     
    'set initial volume to zero
    totalVolume = 0
    
    'set startingPrice and endingPrice datatype
    Dim startingPrice As Double
    Dim endingPrice As Double
    
    'find the number of rows to loop over; originally we used a loop wherein rowEnd was initialized
    'rowEnd code taken from https://stackoverflow.com/questions/18088729/row-count-where-data-exists/18089140
    RowCount = Cells(Rows.Count, "A").End(xlUp).Row

    'loop over all the rows, iterator to start and row 2 as row 1 is the header
    For i = 2 To RowCount
            
        If Cells(i, 1).Value = "DQ" Then
            'increase totalVolume by the value in the current row
            totalVolume = totalVolume + Cells(i, 8).Value
        End If
        
        If Cells(i - 1, 1).Value <> "DQ" And Cells(i, 1).Value = "DQ" Then
            'set startingPrice
            startingPrice = Cells(i, 6).Value
        End If
        
        If Cells(i + 1, 1).Value <> "DQ" And Cells(i, 1).Value = "DQ" Then
            'set endingPrice
            endingPrice = Cells(i, 6).Value
        End If
        
    Next i
    
    'output the results of the analysis
    Worksheets("DQ Analysis").Activate
    Cells(4, 1).Value = "2018"
    Cells(4, 2).Value = totalVolume
    Cells(4, 3).Value = endingPrice / startingPrice - 1
    
    
End Sub


Sub AllStocksAnalysis()

    Dim startTime As Single
    Dim endTime As Single

    yearValue = InputBox("What year would you like to run the analysis on?")
    
        startTime = Timer

'1. Format the output sheet on the "All Stocks Analysis" worksheet.

    'active a new worksheet for our output analysis for All Stocks
    Worksheets("All Stocks Analysis").Activate
    
    'create a heading
    Range("A1").Value = "All Stocks (" + yearValue + ")"
    
    'Create a header row using the cells method
    Cells(3, 1).Value = "Ticker"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"
    
'2. Initialize an array of all (12) tickers.

Dim tickers(12) As String
  
    tickers(0) = "AY"
    tickers(1) = "CSIQ"
    tickers(2) = "DQ"
    tickers(3) = "ENPH"
    tickers(4) = "FSLR"
    tickers(5) = "HASI"
    tickers(6) = "JKS"
    tickers(7) = "RUN"
    tickers(8) = "SEDG"
    tickers(9) = "SPWR"
    tickers(10) = "TERP"
    tickers(11) = "VSLR"

'3. Prepare for the analysis of tickers.
    'Initialize variables for the starting price and ending price.
    
    Dim startingPrice As Double
    Dim endingPrice As Double
       
    'Activate the data worksheet.
    Worksheets(yearValue).Activate
    
    'Find the number of rows to loop over. This was copies from previous code.  See above
    
    RowCount = Cells(Rows.Count, "A").End(xlUp).Row
    
'4. Loop through the tickers.

    For i = 0 To 11
    
        ticker = tickers(i)
        totalVolume = 0

        ' Loop through rows in the data.
        Worksheets(yearValue).Activate
    
            For j = 2 To RowCount
    
                ' Find the total volume for the current ticker.
                If Cells(j, 1).Value = ticker Then
    
                    totalVolume = totalVolume + Cells(j, 8).Value
        
                End If
        
                ' Find the starting price for the current ticker.
                If Cells(j - 1, 1).Value <> ticker And Cells(j, 1).Value = ticker Then
    
                    startingPrice = Cells(j, 6).Value
        
                End If
    
                ' Find the ending price for the current ticker.
                If Cells(j + 1, 1).Value <> ticker And Cells(j, 1).Value = ticker Then
    
                    endingPrice = Cells(j, 6).Value
        
                End If
        
            Next j
        
'5. Output the data for the current ticker.

    'Activate workseet for output
    Worksheets("All Stocks Analysis").Activate
    
    'Create a header row
    Cells(4 + i, 1).Value = ticker
    Cells(4 + i, 2).Value = totalVolume
    Cells(4 + i, 3).Value = endingPrice / startingPrice - 1
    
    Next i
    
        endTime = Timer
        MsgBox "This code ran in " & (endTime - startTime) & " seconds for the year " & (yearValue)

End Sub


Sub formatAllStocksAnalysisTable()

'Activate the worksheet for formatting
Worksheets("All Stocks Analysis").Activate

'Increase the font size of the worksheet header
Range("A1").Font.Size = 14
Range("A1").Font.FontStyle = "Bold Italic"

'Make column heading range bold using the range method
Range("A3:C3").Font.Bold = True

'Add a border to the column heading range
Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous
Range("A3:C3").Borders(xlEdgeTop).LineStyle = xlContinuous

'Format Total Daily Volume and Return Columns
Range("B4:B15").NumberFormat = "$#,##0.00"
Range("C4:C15").NumberFormat = "0.00%"

'Add formatting to automatically fit column widths
Columns("B").AutoFit

'Add If-Then statement to add color formatting to the Return column
dataRowStart = 4
dataRowEnd = 15

    For i = dataRowStart To dataRowEnd
    
        If Cells(i, 3) > 0 Then
            'Color the cell green
            Cells(i, 3).Interior.Color = vbGreen
            
        ElseIf Cells(i, 3) < 0 Then

            'Color the cell red
            Cells(i, 3).Interior.Color = vbRed

        Else
            'Clear the cell color
            Cells(4, 3).Interior.Color = xlNone

        End If
        
    Next i

End Sub

Sub ClearWorksheet()

    'Clear the worksheet to see if the macro works
    Cells.Clear
    
End Sub

